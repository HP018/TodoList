{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","todos","setTodos","todo","setTodo","todoEditing","setTodoEditing","editingText","setEditingText","useEffect","json","localStorage","getItem","loadedTodos","JSON","parse","stringify","setItem","className","action","onSubmit","e","preventDefault","newTodo","id","Date","getTime","text","completed","concat","type","name","placeholder","onChange","target","value","map","todoList","class","onClick","updatedTodo","filter","deleteTodo","updatedTodos","toggleComplete","checked","editTodo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAAe,I,mBC8GAA,MAzGf,WAEE,MAA0BC,IAAMC,SAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBH,IAAMC,SAAS,IAAvC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsCL,IAAMC,SAAS,MAArD,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAsCP,IAAMC,SAAS,IAArD,mBAAOO,EAAP,KAAoBC,EAApB,KAwDA,OAtDAT,IAAMU,WAAU,WACd,IAAMC,EAAOC,aAAaC,QAAQ,SAC5BC,EAAcC,KAAKC,MAAML,GAC3BG,GACFX,EAASW,KAEV,IAEHd,IAAMU,WAAU,WACd,IAAMC,EAAOI,KAAKE,UAAUf,GAC5BU,aAAaM,QAAQ,QAASP,KAC7B,CAACT,IA4CF,gCACA,2CACA,sBAAKiB,UAAU,+BAAf,UACA,qBAAKA,UAAU,cAAf,SAA6B,uBAAMC,OAAO,GAAGC,SA7C1B,SAACC,GACpBA,EAAEC,iBAEF,IAAMC,EAAU,CACdC,IAAI,IAAIC,MAAOC,UACfC,KAAKxB,EACLyB,WAAW,GAGb1B,EAAS,YAAID,GAAO4B,OAAON,IAC3BnB,EAAQ,KAmCqB,UAC3B,uBAAO0B,KAAK,OAAOC,KAAK,GAAGP,GAAG,OAAOQ,YAAY,OAAOC,SAAY,SAACZ,GAAD,OAAOjB,EAAQiB,EAAEa,OAAOC,QAAQA,MAAShC,IAC7G,uBACA,uBACA,uBAAO2B,KAAK,SAASN,GAAG,MAAMW,MAAM,gBAEtC,qBAAKjB,UAAU,YAAf,SACCjB,EAAMmC,KAAI,SAAAC,GAAQ,OAAI,sBAAKnB,UAAU,MAAf,UAEpBmB,EAASb,KAAOnB,EACT,uBACEyB,KAAK,OACLG,SAAU,SAACZ,GAAD,OAAOb,EAAea,EAAEa,OAAOC,QACzCA,MAAS5B,IAGX,oBAAI+B,MAAM,aAAV,SAAwBD,EAASV,OAGzC,wBAAQY,QAAW,kBAlDJ,SAACf,GAClB,IAAMgB,EAAc,YAAIvC,GAAOwC,QAAO,SAACJ,GAAD,OAAcA,EAASb,KAAOA,KACpEtB,EAASsC,GAgDkBE,CAAWL,EAASb,KAAKN,UAAU,OAA5D,SAAmE,cAAC,IAAD,MAEnE,uBACAY,KAAO,WACPG,SAAY,kBAjDhB,SAAwBT,GACtB,IAAImB,EAAe,YAAI1C,GAAOmC,KAAI,SAACjC,GAIjC,OAHIA,EAAKqB,KAAOA,IACdrB,EAAKyB,WAAazB,EAAKyB,WAElBzB,KAETD,EAASyC,GA0CWC,CAAeP,EAASb,KAC1CqB,QAAWR,EAAST,YAGnBvB,IAAgBgC,EAASb,GACxB,wBAAQe,QAAW,kBA5CzB,SAAkBf,GAChB,IAAMgB,EAAc,YAAIvC,GAAOmC,KAAI,SAACjC,GAIlC,OAHIA,EAAKqB,KAAOA,IACdrB,EAAKwB,KAAOpB,GAEPJ,KAETD,EAASsC,GACTlC,EAAe,MACfE,EAAe,IAmCcsC,CAAST,EAASb,KAAKN,UAAU,OAA1D,yBAEA,wBAAQqB,QAAW,kBAAMjC,EAAe+B,EAASb,KAAKN,UAAU,OAAhE,SAAuE,cAAC,IAAD,QAvBxBmB,EAASb,gBCjEjDuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3acfeb90.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nimport { FaTrash, FaPencilAlt } from \"react-icons/fa\";\n\nfunction App() {\n\n  const [todos, setTodos] = React.useState([])\n  const [todo, setTodo] = React.useState(\"\")\n  const [todoEditing, setTodoEditing] = React.useState(null);\n  const [editingText, setEditingText] = React.useState(\"\");\n\n  React.useEffect(() => {\n    const json = localStorage.getItem(\"todos\");\n    const loadedTodos = JSON.parse(json);\n    if (loadedTodos) {\n      setTodos(loadedTodos);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const json = JSON.stringify(todos);\n    localStorage.setItem(\"todos\", json);\n  }, [todos]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    const newTodo = {\n      id: new Date().getTime(),\n      text:todo,\n      completed: false\n    }\n\n    setTodos([...todos].concat(newTodo))\n    setTodo(\"\")\n\n  }\n\n  const deleteTodo = (id) => {\n    const updatedTodo = [...todos].filter((todoList) => todoList.id !== id)\n    setTodos(updatedTodo)\n  }\n\n  function toggleComplete(id) {\n    let updatedTodos = [...todos].map((todo) => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  }\n\n  function editTodo(id) {\n    const updatedTodo = [...todos].map((todo) => {\n      if (todo.id === id){\n        todo.text = editingText\n      }\n      return todo\n    })\n    setTodos(updatedTodo)\n    setTodoEditing(null)\n    setEditingText(\"\")\n  }\n\n  return (\n    <div>\n    <h1>Todo List</h1>\n    <div className=\"card text-dark bg-light mb-3\">\n    <div className=\"card-header\"><form action=\"\" onSubmit = {handleSubmit}>\n      <input type=\"text\" name=\"\" id=\"task\" placeholder=\"Task\" onChange = {(e) => setTodo(e.target.value)} value = {todo} />\n      <br/>\n      <br/>\n      <input type=\"submit\" id=\"sub\" value=\"Submit\"/>\n    </form></div>\n    <div className=\"card-body\">\n    {todos.map(todoList => <div className=\"jai\" key = {todoList.id}>\n\n      {todoList.id === todoEditing ? (\n              <input\n                type=\"text\"\n                onChange={(e) => setEditingText(e.target.value)}\n                value = {editingText}\n              />\n            ) : (\n              <h5 class=\"card-title\">{todoList.text}</h5>\n            )}\n  \n      <button onClick = {() => deleteTodo(todoList.id)} className=\"font\"><FaTrash /></button>\n\n      <input\n      type = \"checkbox\"\n      onChange = {() => toggleComplete(todoList.id)}\n      checked = {todoList.completed}\n      />\n\n      {todoEditing === todoList.id ? \n      ( <button onClick = {() => editTodo(todoList.id)} className=\"font\">Submit edit</button>)\n       : \n       (<button onClick = {() => setTodoEditing(todoList.id)} className=\"font\"><FaPencilAlt /></button>)\n       }\n\n      </div>)}\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}